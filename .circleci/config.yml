version: 2.1
jobs:
  test_backend:
    docker:
      - image: circleci/ruby:2.4.1-node-browsers
        environment:
          RAILS_ENV: test
          PGUSER: root

      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: balloon_bot_test

    working_directory: ~/balloon-bot
    steps:
      - checkout
      - run:
          name: Configure Bundler
          command: |
            echo 'export BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")' >> $BASH_ENV
            source $BASH_ENV
            gem install bundler -v $BUNDLER_VERSION

      - restore_cache:
          name: Restore Bundler Cache
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

      - run:
          name: Install Bundler Dependencies
          command: |
            bundle install --path vendor/bundle --jobs=4 --retry=3


      - save_cache:
          name: Save Bundler Cache
          paths:
            - web/vendor/bundle
          key: v1-dependencies-{{ .Branch }}-{{ checksum "Gemfile.lock" }}

      - run:
          name: Database Setup
          command: |
            cd web
            bundle exec rake db:create
            bundle exec rake db:migrate

      # run tests!
      - run:
          name: Run Tests
          command: |
            mkdir /tmp/test-results

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            core web persistence

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  test_frontend:
    docker:
      - image: circleci/node:8.15.1

    working_directory: ~/balloon-bot
    steps:
      - checkout

      - restore_cache:
          name: Restore Yarn Cache
          key: v1-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - run:
          name: Install Yarn Dependencies
          command: |
            yarn install --frozen-lockfile

      - save_cache:
          name: Save Yarn Cache
          paths:
            - ~/.cache/yarn
          key: v1-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}

      - run:
          name: Run Front-end Tests
          command: |
            yarn test


  restart_apps:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - run:
          name: Restart staging
          command: |
            heroku restart --app balloonbot-staging
            heroku restart --app balloonbot-production

  deploy:
    executor: heroku/default
    steps:
      - checkout
      - heroku/install
      - heroku/deploy-via-git:
          only-branch: master
orbs:
  heroku: circleci/heroku@0.0.8
workflows:
  version: 2
  build_and_test:
    jobs:
      - test_backend
      - test_frontend
      - deploy:
          requires:
            - test_backend
            - test_frontend
          filters:
            branches:
              only: master
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - restart_apps
