# Secrets
SLACK_API_TOKEN=<Found within Slack https://<your domain>>.slack.com/apps/manage (In sidebar: Custom Integrations -> Bots)>
GITHUB_PERSONAL_ACCESS_TOKEN=<Found under Developer settings in github https://github.com/settings/tokens>

# Configuration
DEPLOYMENTS_CHANNEL=<The slack channel that you would like balloon bot to respond to and post messages in, e.g. 'deployments'>
GITHUB_REPO=<DEFAULT: "oliverswitzer/balloon-bot-dev"> -> <username/repo-name of github repository that balloon bot should interact with>
HTTP_AUTH_USER=<The username for accessing the BalloonBot UI>
HTTP_AUTH_PASSWORD=<The password for accessing the BalloonBot UI>

# Optional configurations
FAILURE_CHANNEL_TOPIC=<Text or emoji that will appear in the topic of the deployment channel when no incident is active>
SUCCESS_CHANNEL_TOPIC=<Text or emoji that will appear in the topic of the deployment channel when there is an incident>
SLACK_HANDLE_TO_NOTIFY=<The Slack handle used to notify everyone when there is an incident. Defaults to `<!channel|channel>`. You can ping a user group/team with: <!subteam^ID|handle>, where `ID` is the team id. See https://stackoverflow.com/questions/49577969/tag-user-group-knowing-only-name-with-a-bot-on-slack>
ADDITIONAL_FAILURE_MESSAGE=<An additional message you would like to have displayed whenever anyone invokes BalloonBot "pop" or "hold">
INCIDENT_RESPONSE_CHANNEL=<A secondary slack channel in which incidents are discussed. Use for incident text analysis, will help you gain insights into incident types over time>